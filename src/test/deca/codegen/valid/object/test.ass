; start main program
	LOAD #null, R0
	STORE R0, 2(GB)
	LOAD code.Object.equals, R0
	STORE R0, 3(GB)
	LEA 1(GB), R0
	STORE R0, 4(GB)
	LOAD code.A.setX, R0
	STORE R0, 5(GB)
	LOAD code.A.getX, R0
	STORE R0, 6(GB)
; Beginning of main instructions:
	TSTO #7
	BOV stack_overflow
	ADDSP #7
; A a = new A;
	NEW #2, R2
	BOV heap_overflow
	LEA 4(GB), R0
	STORE R0, 0(R2)
	PUSH R2
	BSR init.A
	POP R2
	STORE R2, 7(GB)
	ADDSP #1
	LOAD 7(GB), R2
	STORE R2, 0(SP)
	LOAD 0(SP), R2
	CMP #null, R2
	BEQ null_object
	LOAD 0(R2), R2
	BSR 1(R2)
	SUBSP #1
	LOAD R1, R2
	LOAD R2, R1
	WINT
	WNL
	ADDSP #2
	LOAD 7(GB), R2
	STORE R2, 0(SP)
	LOAD #3, R2
	STORE R2, -1(SP)
	LOAD 0(SP), R2
	CMP #null, R2
	BEQ null_object
	LOAD 0(R2), R2
	BSR 0(R2)
	SUBSP #2
	LOAD R1, R2
	ADDSP #1
	LOAD 7(GB), R2
	STORE R2, 0(SP)
	LOAD 0(SP), R2
	CMP #null, R2
	BEQ null_object
	LOAD 0(R2), R2
	BSR 1(R2)
	SUBSP #1
	LOAD R1, R2
	LOAD R2, R1
	WINT
	WNL
	HALT
stack_overflow:
	WSTR "Error: Stack overflow"
	WNL
	ERROR
heap_overflow:
	WSTR "Error: Impossible allocation : heap overflow"
	WNL
	ERROR
div_by_zero:
	WSTR "Error: Division by zero"
	WNL
	ERROR
overflow:
	WSTR "Error: Overflow during arithmetic operation"
	WNL
	ERROR
invalid_input:
	WSTR "Error: Invalid input"
	WNL
	ERROR
null_object:
	WSTR "Error: Cannot acces null object"
	WNL
	ERROR
impossible_conv_float:
	WSTR "Error: Impossible converion to float"
	WNL
	ERROR
code.Object.equals:
	TSTO #1
	BOV stack_overflow
	PUSH R2
	LOAD -2(LB), R2
	CMP -3(LB), R2
	SEQ R1
end.Object.equals:
	POP R2
	RTS
init.A:
	TSTO #1
	PUSH R2
	LOAD -2(LB), R1
	LOAD #0, R2
	LOAD #1, R2
	STORE R2, 0(R1)
	RTS
	RTS
code.A.setX:
	TSTO #2
	PUSH R3
	PUSH R2
	LOAD -2(LB), R2
	LOAD 0(R2), R2
	LOAD -3(LB), R3
	STORE R3, 0(R2)
end.A.setX:
	POP R2
	RTS
code.A.getX:
	TSTO #1
	PUSH R2
	LOAD -2(LB), R1
	LOAD 0(R1), R1
	BRA end.A.getX
	WSTR "Error : exiting function A.getX without return instruction"
	WNL
	ERROR
end.A.getX:
	RTS
; end main program
